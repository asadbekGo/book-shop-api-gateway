definitions:
  models.Author:
    properties:
      name:
        type: string
    type: object
  models.AuthorResp:
    properties:
      authorId:
        type: string
      createdAt:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.Book:
    properties:
      authorId:
        type: string
      categories:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  models.BookResp:
    properties:
      author:
        $ref: '#/definitions/models.AuthorResp'
      categories:
        items:
          $ref: '#/definitions/models.CategoryResp'
        type: array
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.Category:
    properties:
      name:
        type: string
      parentUUID:
        type: string
    type: object
  models.CategoryResp:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      parentUUID:
        type: string
      updated_at:
        type: string
    type: object
  models.Empty:
    type: object
  models.Error:
    properties:
      message:
        type: string
    type: object
  models.ListAuthors:
    properties:
      authors:
        items:
          $ref: '#/definitions/models.AuthorResp'
        type: array
      count:
        type: integer
    type: object
  models.ListBooks:
    properties:
      books:
        items:
          $ref: '#/definitions/models.BookResp'
        type: array
      count:
        type: integer
    type: object
  models.ListCategories:
    properties:
      categories:
        items:
          $ref: '#/definitions/models.CategoryResp'
        type: array
      count:
        type: integer
    type: object
  models.ListOrders:
    properties:
      count:
        type: integer
      orders:
        items:
          $ref: '#/definitions/models.OrderResp'
        type: array
    type: object
  models.Order:
    properties:
      bookId:
        type: string
      description:
        type: string
    type: object
  models.OrderResp:
    properties:
      bookId:
        type: string
      createdAt:
        type: string
      description:
        type: string
      updatedAt:
        type: string
    type: object
  models.StandardErrorModel:
    properties:
      error:
        $ref: '#/definitions/models.Error'
    type: object
  models.UpdateAuthor:
    properties:
      name:
        type: string
    type: object
  models.UpdateBook:
    properties:
      authorId:
        type: string
      categories:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  models.UpdateCategory:
    properties:
      name:
        type: string
      parentUUID:
        type: string
    type: object
  models.UpdateOrder:
    properties:
      bookId:
        type: string
      description:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/author/:
    post:
      consumes:
      - application/json
      description: This API for creating a new author
      parameters:
      - description: authorCreateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Author'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthorResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: CreateAuthor
      tags:
      - author
  /v1/author/{id}:
    delete:
      consumes:
      - application/json
      description: This API for deleting author
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: DeleteAuthor
      tags:
      - author
    put:
      consumes:
      - application/json
      description: This API for updating author
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: authorUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateAuthor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthorResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: UpdateAuthor
      tags:
      - author
  /v1/authors:
    get:
      consumes:
      - application/json
      description: This API for getting list of authors
      parameters:
      - description: Page
        in: query
        name: page
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListAuthors'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: GetAuthors
      tags:
      - author
  /v1/authors/{id}:
    get:
      consumes:
      - application/json
      description: This API for getting author ListAuthors
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthorResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: GetAuthor
      tags:
      - author
  /v1/book/:
    post:
      consumes:
      - application/json
      description: This API for creating a new book
      parameters:
      - description: bookCreateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BookResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: CreateBook
      tags:
      - book
  /v1/book/{id}:
    delete:
      consumes:
      - application/json
      description: This API for deleting book
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: DeleteBook
      tags:
      - book
    put:
      consumes:
      - application/json
      description: This API for updating book
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: bookUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBook'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BookResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: UpdateBook
      tags:
      - book
  /v1/books:
    get:
      consumes:
      - application/json
      description: This API for getting list of books
      parameters:
      - description: Page
        in: query
        name: page
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      - description: Author
        in: query
        name: author
        type: string
      - description: Category
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListBooks'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: GetBooks
      tags:
      - book
  /v1/books/{id}:
    get:
      consumes:
      - application/json
      description: This API for getting book detail
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BookResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: GetBook
      tags:
      - book
  /v1/categories:
    get:
      consumes:
      - application/json
      description: This API for getting list of categories
      parameters:
      - description: Page
        in: query
        name: page
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListCategories'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: GetCategories
      tags:
      - category
  /v1/categories/{id}:
    get:
      consumes:
      - application/json
      description: This API for getting category detail
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: GetCategory
      tags:
      - category
  /v1/category/:
    post:
      consumes:
      - application/json
      description: This API for creating a new category
      parameters:
      - description: categoryCreateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: CreateCategory
      tags:
      - category
  /v1/category/{id}:
    delete:
      consumes:
      - application/json
      description: This API for deleting category
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: DeleteCategory
      tags:
      - category
    put:
      consumes:
      - application/json
      description: This API for updating category
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: categoryUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: UpdateCategory
      tags:
      - category
  /v1/order/:
    post:
      consumes:
      - application/json
      description: This API for creating a new order
      parameters:
      - description: orderCreateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrderResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: CreateOrder
      tags:
      - order
  /v1/order/{id}:
    delete:
      consumes:
      - application/json
      description: This API for deleting order
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: DeleteOrder
      tags:
      - order
    put:
      consumes:
      - application/json
      description: This API for updating order
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: orderUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrderResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: UpdateOrder
      tags:
      - order
  /v1/orders:
    get:
      consumes:
      - application/json
      description: This API for getting list of orders
      parameters:
      - description: Page
        in: query
        name: page
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListOrders'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: ListOrders
      tags:
      - order
  /v1/orders/{id}:
    get:
      consumes:
      - application/json
      description: This API for getting order detail
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrderResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: GetOrder
      tags:
      - order
swagger: "2.0"
